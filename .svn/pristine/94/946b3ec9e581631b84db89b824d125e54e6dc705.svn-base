require([
    'js/chatServer.server.js',
    'js/ajaxfileupload.js',
], function(server) {
    'use strict';

    /**
     * 图片上传功能
     */
    console.log( 'say hello' )

    // ws://123.56.239.169:9090/ws
    var ws = new WebSocket('ws://123.56.239.169:9090/ws?appKey=1ade7dd65f704256a36077f6370eab3f&user=1231');




    var main = ({
        init: function() {
            this.oMsgResponse = $('#msgResponse');
            this.aResponseTtems = this.oMsgResponse.find('.response-item');

            this.oMsgTextArea = $('#msgTextArea');

            this.oEnquiry = $('#enquiryList');
            this.oEnquiryList = $('#enquiryList').find('.list').eq(0);


            this.oRequestBtns = $('#requestBtns');
            this.oTextNull = this.oRequestBtns.find('.text-null').eq(0);
            this.oSendBtn = this.oRequestBtns.find('.send').eq(0);
            this.oChangeSendBtn = this.oRequestBtns.find('.send-btn').eq(0);
            this.oSendType = this.oRequestBtns.find('.send-type').eq(0);
            
            this.getDataList();
            this.getSetSendMethod();
            this.editMsg();
            this.bindEvents();
            this.scrollBar();
        },
        /**
         * 拉取数据(核价列表、聊天记录、核价对象详情)
         */
        getDataList: function() {
            // 核价列表(假装拿到了数据)
            var _this = this,
                aEnquiryListItem = this.oEnquiryList.find('.item');
            aEnquiryListItem.each(function(idx,elm){
                $(elm).unbind('click').bind('click',function(){
                    if( $(this).hasClass('active') ) return;
                    $(this).addClass('active').siblings().removeClass('active');
                    _this.aResponseTtems.eq(idx).removeClass('hide').siblings().addClass('hide');
                    // 根据核价对象查询聊天记录
                    _this.queryMsgLog();
                });
            });

            // 核价对象详情

        },
        /**
         * 查询聊天记录
         */
        queryMsgLog: function() {
            // 假装已经请求完成 ajax
            var _this = this,html = '';
            // 请求最后10条数据
            ;(function(){
                console.log( '请求聊天记录开始...' );
                _this.changeScrollOffset();
                return;
                for( var i=0; i<data.length; i++ ) {
                    var data = data[i];
                    // 时间(表示有时间)
                    if( data.timer ) {
                        html += '<div class="msg-time"><span>'+data.timer+'</span></div>';
                    }
                    // 客服响应数据
                    if( data.response ) {
                        html += '<div class="msg-server">\
                            <div class="msg-server-hd"></div>\
                            <div class="msg-server-info">\
                                <b class="icon i"></b>\
                                <p>'+data.response+'</p>\
                            </div>\
                        </div>';
                    }
                    // 客人发送数据
                    if( data.send ) {
                        html += '<div class="msg-guest">\
                            <div class="msg-server-info">\
                                <b class="icon i"></b>\
                                <p>'+data.send+'</p>\
                            </div>\
                            <div class="msg-server-hd"></div>\
                        </div>';
                    }
                }
                // 找到对应核价对象并改变html
                // _this.oMsgResponse.html( html );

                _this.changeScrollOffset();
                // 查看更多消息
                _this.showMoveMsg();
            })();
        },
        /**
         * 查看更多消息
         */
        showMoveMsg: function() {
            var oMoveLink = this.msgResponse.find('.move-link').eq(0);
            oMoveLink.unbind('click').bind('click',function(){
                console.log( '查看更多消息' );
            });
        },
        /**
         * 往服务器发送消息并生成聊天记录
         */
        sendMsg: function(msg) {
            

            ws.send(msg);


            var _this = this,html,timer = null;
            this.showResponseObj = this.oMsgResponse.children('.response-item').not(':hidden');
            if( msg == '' ) {
                //html = '<div>输出内容再发...</div>';
                this.oTextNull.show();
                // 在3秒内如果还处于显示状态则自动隐藏
                timer = setTimeout(function() {
                    if( _this.oTextNull.is(':visible') ) {
                        _this.oTextNull.hide();
                    }
                    clearTimeout(timer);
                }, 3000);
                return;
            }else{
                // 发送消息dom
                html = '<div class="msg-guest">\
                    <div class="msg-server-info">\
                        <b class="icon i"></b>\
                        <p>'+msg+'</p>\
                    </div>\
                    <div class="msg-server-hd"></div>\
                </div>';
            }
            // 清空已发送的数据
            this.oMsgTextArea.val('');
            // 找到对应核价对象dom生成
            this.showResponseObj.append( html );
            // 改变滚动条位置
            this.changeScrollOffset();
            
            // 假装有消息回复
            setTimeout(function() {
                _this.responseMsg();
            },500);
        },
        /**
         * 接收响应消息
         */
        responseMsg: function() {
            ws.onmessage = function(message) {
                console.log(message)
                var data = JSON.parse(message.data);
            };
            var html = '<div class="msg-server">\
                <div class="msg-server-hd"></div>\
                <div class="msg-server-info">\
                    <b class="icon i"></b>\
                    <p>您的估价已提交成功，稍后我们会给您回复结果，请耐心等候。如有疑问请随时与我沟通！</p>\
                </div>\
            </div>';
            // 找到对应核价对象返回客服消息
            this.showResponseObj.append( html );
            // 改变滚动条位置
            this.changeScrollOffset();
        },
        /**
         * 编辑消息，按键检测
         */
        editMsg: function() {
            var _this = this;
            this.oMsgTextArea.unbind('keydown').bind('keydown',function(e){
                var e = e || window.event;
                var chatSendType = sessionStorage.getItem('fggChatSendType'),
                    sVal = _this.oMsgTextArea.val();
                if( chatSendType == '0' ) {
                    // 按ctrl+enter 换行，Enter发送消息
                    if( e.ctrlKey && e.which == 13 ) {
                        console.log('ctrl+enter 换行');
                        if(_this.oMsgTextArea.val().length>0) {
                            _this.oMsgTextArea.val( _this.oMsgTextArea.val()+" \r" );
                        }else{
                            _this.oMsgTextArea.val(" \r");
                        }
                    }else if( !e.ctrlKey && e.which == 13 ) {
                        // enter发消息
                        e.preventDefault();
                        console.log( 'enter 发消息' );
                        _this.sendMsg( sVal );
                    }else{
                        _this.oTextNull.hide();
                    }
                }else if( chatSendType == '1' ) {
                    // 按Ctrl+Enter发消息，Enter键换行
                    if( !e.ctrlKey && e.which == 13 ) {
                        console.log('enter 换行');
                        _this.oTextNull.hide();
                    }else if( e.ctrlKey && e.which == 13 ) {
                        e.preventDefault();
                        console.log( 'Ctrl+Enter 发消息' );
                        _this.sendMsg( sVal );
                    }else{
                        _this.oTextNull.hide();
                    }
                }
            });
        },
        /**
         * 发送消息按钮，切换发送消息功能键
         */
        bindEvents: function() {
            var _this = this;
            // 发送消息
            this.oSendBtn.unbind('click').bind('click',function(){
                _this.sendMsg( _this.oMsgTextArea.val() );
            });
            // 显示隐藏改变发送消息的方式
            this.oChangeSendBtn.unbind('click').bind('click',function(e){
                e.stopPropagation();
                _this.oSendType.toggle();
                $(document).bind('click',function(){
                    if( _this.oSendType.is(':visible') ) {
                        _this.oSendType.hide();
                        $(document).unbind('click');
                    }
                });
            });
        },
        /**
         * 切换在送消息功能按键
         */
        getSetSendMethod: function() {
            var _this = this,
                aChilds = _this.oSendType.find('.list').eq(0).find('.item');
            // 设置默认发送消息的方式
            if(!sessionStorage.getItem('fggChatSendType')) {
                sessionStorage.setItem('fggChatSendType',0);
                aChilds.eq(0).addClass('active');
            }else{
                aChilds.eq( sessionStorage.getItem('fggChatSendType') ).addClass('active').siblings().removeClass('active');
            }
            aChilds.each(function(idx,elm) {
                $(elm).unbind('click').bind('click',function(){
                    sessionStorage.setItem('fggChatSendType',idx);
                    // 改变发送消息的方式
                    $(this).addClass('active').siblings().removeClass('active');
                    // 隐藏发送消息切换列表
                    _this.oSendType.hide();
                    // 改变发送按键类型
                    _this.editMsg();
                    // 解除document事件绑定
                    $(document).unbind('click');
                });
            });
        },
        /**
         * 添加滚动条
         */
        scrollBar: function() {
            this.oEnquiry.mCustomScrollbar({
                scrollInertia: 180,
                theme: "inset-3",
                axis: "y"
            });
            $('.msg-response-scroll').mCustomScrollbar({
                alwaysShowScrollbar: 0,
                scrollInertia: 0,
                theme: "inset-3",
                axis: "y"
            });
        },
        /**
         * 改变滚动条位置
         * offset: (top,bottom)
         */
        changeScrollOffset: function(offset) {
            $('.msg-response-scroll').mCustomScrollbar("scrollTo",offset || "bottom");
        },
        /**
        * 上传图片初始化传入集合数据
        */
       uploadInit: function(lis){
           var _this = this;
           $('#picUpload').on('change',function(){
               _this.startUpload( $(this) );
           });
           return this;
       },
       /**
        * 开始上传图片文件并回显到dom中显示（方法自动调用）
        * @param  {[type]} fileId 指定上传的input file id
        */
       startUpload: function(obj){
           console.log(123)
           var _this = this;
           obj.attr("count",new Date().getTime());
           var fileId = obj.attr('id');
           var lastIndex = obj.val().toLowerCase().lastIndexOf('.');
           var str = obj.val().substr(lastIndex);
           var fileType = [".jpg",".png",".jpeg"];
           // 过滤文件类型
           if(fileType.indexOf(str) < 0) {
               //obj.val(''); 
               var thisFile =  '<input type="file" id='+fileId+' name="file" style="top: 46.5px; left: 37px; display: none; height: 29px; width: 74px; display: inline-block; opacity: 0; cursor: pointer; flter:Alpha(opacity=0);"/>'
               obj.before($(thisFile));
               obj.remove();
               layer.msg('请上传'+fileType.join(',')+'类型的图片');
               return;
           }else{
               var isIE = /msie/i.test(navigator.userAgent) && !window.opera;
               if (isIE && !$("#"+fileId)[0].files) {
                    
               } else {
                     var size = $("#"+fileId)[0].files[0].size;
                     if(size/1024/1024>5){
                       return layer.msg("请上传5M以下的文件");
                   }
               }
           }
           $.ajaxFileUpload({
               url: yf.baseUrl + '/files/uploadFile?type=image', //用于文件上传的服务器端请求地址
               secureuri: false, //是否需要安全协议，一般设置为false
               fileElementId: fileId, //文件上传域的ID
               type: "post",
               dataType: 'json', //返回值类型 一般设置为json
               success: function(data){
                   var data = JSON.parse(data);
                   console.log(data);

                   if (data.status == 0) {
                       var pics = data.data;
                       $("#"+fileId).val("");
                   } else {
                       layer.msg(data.msg);
                   }
               },
               error : function(data, status, e){
                   //服务器响应失败处理函数
                   console.log(JSON.stringify(data)+'===='+JSON.stringify(status)+'==='+e);
               }
           });
       }
    }).init();
});
